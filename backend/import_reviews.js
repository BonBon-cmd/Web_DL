const mongoose = require('mongoose');
const Review = require('./models/Review');
const Tour = require('./models/Tour');
const User = require('./models/User');

mongoose.connect('mongodb://localhost:27017/travel_booking', {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

const sampleReviews = [
  // Reviews cho c√°c tours kh√°c nhau
  {
    rating: 5,
    comment: 'Tour tuy·ªát v·ªùi! H∆∞·ªõng d·∫´n vi√™n nhi·ªát t√¨nh, kh√°ch s·∫°n s·∫°ch s·∫Ω. C·∫£nh ƒë·∫πp lung linh, ƒë·ªì ƒÉn ngon. S·∫Ω quay l·∫°i ch·∫Øc ch·∫Øn!',
    language: 'vi'
  },
  {
    rating: 5,
    comment: 'Amazing experience! The tour guide was knowledgeable and friendly. Beautiful scenery and great food. Highly recommended!',
    language: 'en'
  },
  {
    rating: 4,
    comment: 'Chuy·∫øn ƒëi r·∫•t ƒë√°ng gi√°! L·ªãch tr√¨nh h·ª£p l√Ω, c√°c ƒëi·ªÉm tham quan ƒë·ªÅu ƒë·∫πp. Ch·ªâ c√≥ th·ªùi gian h∆°i g·∫•p m·ªôt ch√∫t.',
    language: 'vi'
  },
  {
    rating: 4,
    comment: 'Great tour overall. Well organized and professional service. Only minor issue was the tight schedule.',
    language: 'en'
  },
  {
    rating: 5,
    comment: 'Tr·∫£i nghi·ªám tuy·ªát v·ªùi nh·∫•t t·ª´ng c√≥! M·ªçi th·ª© ƒë·ªÅu ho√†n h·∫£o t·ª´ kh√°ch s·∫°n, ƒë·ªì ƒÉn ƒë·∫øn l·ªãch tr√¨nh. C·∫£m ∆°n team!',
    language: 'vi'
  },
  {
    rating: 3,
    comment: 'Tour ·ªïn, gi√° c·∫£ h·ª£p l√Ω. Tuy nhi√™n d·ªãch v·ª• c√≤n c·∫ßn c·∫£i thi·ªán m·ªôt s·ªë ƒëi·ªÉm nh·ªè.',
    language: 'vi'
  },
  {
    rating: 5,
    comment: 'Perfect vacation! Everything exceeded my expectations. The guide was excellent and the places we visited were breathtaking.',
    language: 'en'
  },
  {
    rating: 4,
    comment: 'Chuy·∫øn ƒëi ƒë√°ng nh·ªõ v·ªõi gia ƒë√¨nh. Con tr·∫ª r·∫•t th√≠ch c√°c ho·∫°t ƒë·ªông. Hy v·ªçng c√≥ th√™m nhi·ªÅu ƒëi·ªÉm vui ch∆°i cho tr·∫ª em.',
    language: 'vi'
  },
  {
    rating: 5,
    comment: 'Absolutely wonderful! Best money I have spent on a vacation. The tour was well-paced and very enjoyable.',
    language: 'en'
  },
  {
    rating: 4,
    comment: 'Tour r·∫•t t·ªët, phong c·∫£nh ƒë·∫πp. Th·ª©c ƒÉn ngon mi·ªáng. Tuy nhi√™n xe di chuy·ªÉn h∆°i l√¢u.',
    language: 'vi'
  },
  {
    rating: 5,
    comment: 'Fantastic tour! Great value for money. The accommodation was comfortable and the food was delicious.',
    language: 'en'
  },
  {
    rating: 5,
    comment: 'M·ªôt tr·∫£i nghi·ªám kh√¥ng th·ªÉ qu√™n! M·ªçi ng∆∞·ªùi r·∫•t th√¢n thi·ªán, nhi·ªát t√¨nh. S·∫Ω gi·ªõi thi·ªáu cho b·∫°n b√®.',
    language: 'vi'
  },
  {
    rating: 4,
    comment: 'Good tour with professional service. The itinerary was well-planned. Would recommend to friends.',
    language: 'en'
  },
  {
    rating: 5,
    comment: 'Tuy·ªát v·ªùi t·ª´ A ƒë·∫øn Z! Kh√¥ng c√≥ g√¨ ƒë·ªÉ ch√™. C·∫£m ∆°n ƒë√£ mang ƒë·∫øn k·ª≥ ngh·ªâ tuy·ªát v·ªùi cho gia ƒë√¨nh t√¥i.',
    language: 'vi'
  },
  {
    rating: 3,
    comment: 'Average tour. Nothing special but nothing bad either. Price is fair.',
    language: 'en'
  },
  {
    rating: 5,
    comment: 'Excellent tour! The guide was amazing and very informative. Loved every moment of it!',
    language: 'en'
  },
  {
    rating: 4,
    comment: 'Chuy·∫øn ƒëi vui v·∫ª, nh√≥m b·∫°n ƒëi c√πng r·∫•t h√≤a ƒë·ªìng. Kh√°ch s·∫°n t·ªët, ph·ª•c v·ª• chu ƒë√°o.',
    language: 'vi'
  },
  {
    rating: 5,
    comment: 'Best tour ever! Everything was perfect. Will definitely book again for my next vacation.',
    language: 'en'
  },
  {
    rating: 4,
    comment: 'Tour t·ªët, gi√° h·ª£p l√Ω. C√°c ƒëi·ªÉm tham quan ƒë·ªÅu ƒë·∫πp v√† th√∫ v·ªã. ƒê√°ng ƒë·ªÉ tr·∫£i nghi·ªám m·ªôt l·∫ßn.',
    language: 'vi'
  },
  {
    rating: 5,
    comment: 'Wonderful experience from start to finish. Highly professional and well organized. Thank you!',
    language: 'en'
  }
];

// Th√™m nhi·ªÅu comments ƒëa d·∫°ng h∆°n
const additionalComments = {
  vi: [
    'C·∫£nh ƒë·∫πp tuy·ªát v·ªùi, ƒë·ªì ƒÉn ngon! Nh∆∞ng th·ªùi ti·∫øt h∆°i n√≥ng.',
    'Chuy·∫øn ƒëi r·∫•t th√∫ v·ªã, h·ªçc h·ªèi ƒë∆∞·ª£c nhi·ªÅu ƒëi·ªÅu v·ªÅ vƒÉn h√≥a ƒë·ªãa ph∆∞∆°ng.',
    'H∆∞·ªõng d·∫´n vi√™n r·∫•t am hi·ªÉu, gi·∫£i th√≠ch chi ti·∫øt. R·∫•t h√†i l√≤ng!',
    'Kh√°ch s·∫°n sang tr·ªçng, view ƒë·∫πp. Tuy nhi√™n gi√° h∆°i cao so v·ªõi d·ªãch v·ª•.',
    'Tour ph√π h·ª£p cho gia ƒë√¨nh, nhi·ªÅu ho·∫°t ƒë·ªông vui ch∆°i. Con nh·ªè r·∫•t th√≠ch!',
    'L·ªãch tr√¨nh h·ª£p l√Ω, kh√¥ng qu√° g·∫•p r√∫t. C√≥ th·ªùi gian t·∫≠n h∆∞·ªüng t·ª´ng ƒë·ªãa ƒëi·ªÉm.',
    'Ph∆∞∆°ng ti·ªán di chuy·ªÉn tho·∫£i m√°i, s·∫°ch s·∫Ω. L√°i xe r·∫•t chuy√™n nghi·ªáp.',
    'ƒê·ªì ƒÉn ƒëa d·∫°ng, ngon mi·ªáng. Ph·ª•c v·ª• chu ƒë√°o, nhi·ªát t√¨nh.',
    'Tr·∫£i nghi·ªám tuy·ªát v·ªùi! S·∫Ω gi·ªõi thi·ªáu cho b·∫°n b√® v√† ng∆∞·ªùi th√¢n.',
    'Gi√° c·∫£ ph·∫£i chƒÉng, ch·∫•t l∆∞·ª£ng t·ªët. ƒê√°ng ƒë·ªìng ti·ªÅn b√°t g·∫°o!'
  ],
  en: [
    'Beautiful scenery and delicious food! Weather was a bit hot though.',
    'Very interesting trip, learned a lot about local culture.',
    'Tour guide was very knowledgeable and explained everything in detail. Very satisfied!',
    'Luxurious hotel with beautiful view. However, price is a bit high for the service.',
    'Perfect for families, lots of fun activities. Kids loved it!',
    'Well-paced itinerary, not too rushed. Had time to enjoy each location.',
    'Comfortable and clean transportation. Driver was very professional.',
    'Diverse and delicious food. Service was attentive and friendly.',
    'Wonderful experience! Will recommend to friends and family.',
    'Great value for money, good quality. Worth every penny!'
  ]
};

const importReviews = async () => {
  try {
    // X√≥a t·∫•t c·∫£ reviews c≈©
    await Review.deleteMany({});
    console.log('ƒê√£ x√≥a reviews c≈©');

    // L·∫•y t·∫•t c·∫£ tours v√† users
    const tours = await Tour.find();
    const users = await User.find({ role: 'user' });

    if (tours.length === 0) {
      console.log('Kh√¥ng c√≥ tours trong database');
      return;
    }

    if (users.length === 0) {
      console.log('Kh√¥ng c√≥ users trong database');
      return;
    }

    console.log(`T√¨m th·∫•y ${tours.length} tours v√† ${users.length} users`);

    let reviewCount = 0;

    // T·∫°o reviews cho m·ªói tour
    for (const tour of tours) {
      // Random s·ªë l∆∞·ª£ng reviews cho m·ªói tour (3-8 reviews)
      const numReviews = Math.min(Math.floor(Math.random() * 6) + 3, users.length);
      
      console.log(`T·∫°o ${numReviews} reviews cho tour: ${tour.title}`);

      // Shuffle users ƒë·ªÉ tr√°nh duplicate
      const shuffledUsers = [...users].sort(() => Math.random() - 0.5);

      for (let i = 0; i < numReviews; i++) {
        // L·∫•y user theo th·ª© t·ª± t·ª´ shuffled array ƒë·ªÉ tr√°nh duplicate
        const user = shuffledUsers[i];
        
        // Random rating (70% chance l√† 4-5 sao, 30% l√† 3 sao)
        let rating;
        const rand = Math.random();
        if (rand < 0.4) {
          rating = 5;
        } else if (rand < 0.7) {
          rating = 4;
        } else {
          rating = 3;
        }

        // Random comment
        let comment;
        const useAdditionalComments = Math.random() > 0.5;
        if (useAdditionalComments) {
          const lang = Math.random() > 0.5 ? 'vi' : 'en';
          comment = additionalComments[lang][Math.floor(Math.random() * additionalComments[lang].length)];
        } else {
          const sampleReview = sampleReviews[Math.floor(Math.random() * sampleReviews.length)];
          comment = sampleReview.comment;
        }

        // T·∫°o review
        try {
          const review = await Review.create({
            tour: tour._id,
            user: user._id,
            rating: rating,
            comment: comment,
            createdAt: new Date(Date.now() - Math.random() * 90 * 24 * 60 * 60 * 1000) // Random date trong 90 ng√†y qua
          });

          reviewCount++;
        } catch (error) {
          if (error.code === 11000) {
            console.log(`‚ö†Ô∏è B·ªè qua duplicate review: ${user.name} cho tour ${tour.title}`);
          } else {
            throw error;
          }
        }
      }
    }

    console.log(`‚úÖ ƒê√£ t·∫°o th√†nh c√¥ng ${reviewCount} reviews!`);
    
    // C·∫≠p nh·∫≠t l·∫°i ratingsAverage v√† ratingsQuantity cho c√°c tours
    console.log('ƒêang c·∫≠p nh·∫≠t ratings cho tours...');
    
    for (const tour of tours) {
      const reviews = await Review.find({ tour: tour._id });
      
      if (reviews.length > 0) {
        const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;
        
        await Tour.findByIdAndUpdate(tour._id, {
          ratingsAverage: Math.round(avgRating * 10) / 10, // Round to 1 decimal
          ratingsQuantity: reviews.length
        });
        
        console.log(`‚úÖ Tour "${tour.title}": ${reviews.length} reviews, avg rating: ${avgRating.toFixed(1)}`);
      }
    }

    console.log('\nüéâ Import reviews ho√†n t·∫•t!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå L·ªói khi import reviews:', error);
    process.exit(1);
  }
};

importReviews();
