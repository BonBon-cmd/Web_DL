// =====================================================
// SCRIPT INSERT REVIEWS V√ÄO MONGODB
// =====================================================
// L∆ØU √ù: C·∫ßn ch·∫°y SAU KHI ƒë√£ insert users v√† tours!
// Reviews c·∫ßn tour ID v√† user ID t·ª´ database

// =====================================================
// B∆Ø·ªöC 1: L·∫§Y IDs T·ª™ DATABASE
// =====================================================

// L·∫•y tour IDs
const tours = db.tours.find().toArray();
const dalat = tours.find(t => t.title.includes("ƒê√† L·∫°t"))?._id;
const halong = tours.find(t => t.title.includes("H·∫° Long"))?._id;
const phuquoc = tours.find(t => t.title.includes("Ph√∫ Qu·ªëc"))?._id;
const sapa = tours.find(t => t.title.includes("Sapa"))?._id;
const nhatrang = tours.find(t => t.title.includes("Nha Trang"))?._id;
const hoian = tours.find(t => t.title.includes("H·ªôi An"))?._id;

// L·∫•y user IDs
const users = db.users.find().toArray();
const adminUser = users.find(u => u.role === "admin")?._id;
const regularUser = users.find(u => u.role === "user")?._id;

// =====================================================
// B∆Ø·ªöC 2: T·∫†O USERS B·ªî SUNG (ƒë·ªÉ c√≥ nhi·ªÅu reviews)
// =====================================================

db.users.insertMany([
  {
    name: "Tr·∫ßn Th·ªã B",
    email: "tran.b@example.com",
    password: "$2a$10$5YgZ8vqXz4qP7yU9xN2QZeX8j1jK5QwE7xH2nZ9fG8hW3kL6pM4mS",
    role: "user",
    phone: "0912345678",
    dateOfBirth: new Date("1992-03-20"),
    avatar: "default-avatar.jpg",
    createdAt: new Date()
  },
  {
    name: "L√™ VƒÉn C",
    email: "le.c@example.com",
    password: "$2a$10$5YgZ8vqXz4qP7yU9xN2QZeX8j1jK5QwE7xH2nZ9fG8hW3kL6pM4mS",
    role: "user",
    phone: "0923456789",
    dateOfBirth: new Date("1988-07-15"),
    avatar: "default-avatar.jpg",
    createdAt: new Date()
  },
  {
    name: "Ph·∫°m Th·ªã D",
    email: "pham.d@example.com",
    password: "$2a$10$5YgZ8vqXz4qP7yU9xN2QZeX8j1jK5QwE7xH2nZ9fG8hW3kL6pM4mS",
    role: "user",
    phone: "0934567890",
    dateOfBirth: new Date("1994-11-08"),
    avatar: "default-avatar.jpg",
    createdAt: new Date()
  },
  {
    name: "Ho√†ng VƒÉn E",
    email: "hoang.e@example.com",
    password: "$2a$10$5YgZ8vqXz4qP7yU9xN2QZeX8j1jK5QwE7xH2nZ9fG8hW3kL6pM4mS",
    role: "user",
    phone: "0945678901",
    dateOfBirth: new Date("1991-05-25"),
    avatar: "default-avatar.jpg",
    createdAt: new Date()
  }
]);

print("‚úÖ ƒê√£ t·∫°o 4 users b·ªï sung");

// L·∫•y l·∫°i t·∫•t c·∫£ users
const allUsers = db.users.find({ role: "user" }).toArray();
const user1 = allUsers[0]?._id;
const user2 = allUsers[1]?._id;
const user3 = allUsers[2]?._id;
const user4 = allUsers[3]?._id;

// =====================================================
// B∆Ø·ªöC 3: INSERT REVIEWS
// =====================================================

// Reviews cho tour ƒê√† L·∫°t
if (dalat && user1) {
  db.reviews.insertMany([
    {
      tour: dalat,
      user: user1,
      rating: 5,
      comment: "ƒê√† L·∫°t th·∫≠t tuy·ªát v·ªùi! Kh√¥ng kh√≠ trong l√†nh, phong c·∫£nh ƒë·∫πp m√™ h·ªìn. H∆∞·ªõng d·∫´n vi√™n nhi·ªát t√¨nh, l·ªãch tr√¨nh h·ª£p l√Ω. Ch·∫Øc ch·∫Øn s·∫Ω quay l·∫°i!",
      createdAt: new Date("2025-10-15")
    },
    {
      tour: dalat,
      user: user2,
      rating: 5,
      comment: "Tour r·∫•t chuy√™n nghi·ªáp, kh√°ch s·∫°n s·∫°ch s·∫Ω, ƒë·ªì ƒÉn ngon. C√°c th√°c n∆∞·ªõc v√† ƒë·ªìi ch√® r·∫•t ƒë·∫πp. X·ª©ng ƒë√°ng 5 sao!",
      createdAt: new Date("2025-10-16")
    },
    {
      tour: dalat,
      user: user3,
      rating: 4,
      comment: "Chuy·∫øn ƒëi tuy·ªát v·ªùi, ch·ªâ c√≥ ƒëi·ªÅu th·ªùi ti·∫øt h∆°i l·∫°nh. Nh∆∞ng kh√¥ng ·∫£nh h∆∞·ªüng g√¨, v·∫´n r·∫•t vui!",
      createdAt: new Date("2025-10-18")
    }
  ]);
  print("‚úÖ ƒê√£ t·∫°o 3 reviews cho ƒê√† L·∫°t");
}

// Reviews cho tour H·∫° Long
if (halong && user2) {
  db.reviews.insertMany([
    {
      tour: halong,
      user: user2,
      rating: 5,
      comment: "V·ªãnh H·∫° Long ƒë·∫πp nh∆∞ tranh v·∫Ω! Du thuy·ªÅn sang tr·ªçng, h·∫£i s·∫£n t∆∞∆°i ngon. ƒê·ªôi ng≈© ph·ª•c v·ª• t·∫≠n t√¢m. Highly recommended!",
      createdAt: new Date("2025-10-12")
    },
    {
      tour: halong,
      user: user3,
      rating: 4,
      comment: "C·∫£nh ƒë·∫πp kh√¥ng c√≥ g√¨ ƒë·ªÉ ch√™. Hang S·ª≠ng S·ªët th·∫≠t s·ª± cho√°ng ng·ª£p. Tr·ª´ ƒëi·ªÉm v√¨ th·ªùi ti·∫øt c√≥ m√¢y.",
      createdAt: new Date("2025-10-14")
    },
    {
      tour: halong,
      user: user4,
      rating: 5,
      comment: "L·∫ßn ƒë·∫ßu ƒëi H·∫° Long, qu√° ·∫•n t∆∞·ª£ng! T·∫Øm bi·ªÉn, ch√®o kayak, ƒÉn h·∫£i s·∫£n... T·∫•t c·∫£ ƒë·ªÅu tuy·ªát v·ªùi!",
      createdAt: new Date("2025-10-17")
    }
  ]);
  print("‚úÖ ƒê√£ t·∫°o 3 reviews cho H·∫° Long");
}

// Reviews cho tour Ph√∫ Qu·ªëc
if (phuquoc && user1) {
  db.reviews.insertMany([
    {
      tour: phuquoc,
      user: user1,
      rating: 5,
      comment: "Ph√∫ Qu·ªëc l√† thi√™n ƒë∆∞·ªùng bi·ªÉn ƒë·∫£o! B√£i Sao ƒë·∫πp ng·∫•t ng√¢y, n∆∞·ªõc bi·ªÉn trong xanh. Resort 5 sao, d·ªãch v·ª• ho√†n h·∫£o!",
      createdAt: new Date("2025-10-10")
    },
    {
      tour: phuquoc,
      user: user4,
      rating: 5,
      comment: "Tr·∫£i nghi·ªám tuy·ªát v·ªùi! L·∫∑n ng·∫Øm san h√¥ ƒë·∫πp l·∫Øm. H·∫£i s·∫£n t∆∞∆°i s·ªëng gi√° r·∫ª. 4 ng√†y 3 ƒë√™m v·∫´n th·∫•y ng·∫Øn!",
      createdAt: new Date("2025-10-19")
    }
  ]);
  print("‚úÖ ƒê√£ t·∫°o 2 reviews cho Ph√∫ Qu·ªëc");
}

// Reviews cho tour Sapa
if (sapa && user3) {
  db.reviews.insertMany([
    {
      tour: sapa,
      user: user3,
      rating: 5,
      comment: "Sapa m√πa l√∫a ch√≠n ƒë·∫πp kh√¥ng th·ªÉ t·∫£! Ru·ªông b·∫≠c thang tuy·ªát ƒë·∫πp, chinh ph·ª•c Fansipan th√†nh c√¥ng. ƒê·ªôi ng≈© h∆∞·ªõng d·∫´n r·∫•t pro!",
      createdAt: new Date("2025-10-08")
    },
    {
      tour: sapa,
      user: user1,
      rating: 4,
      comment: "Tour trekking r·∫•t th√∫ v·ªã. G·∫∑p ƒë∆∞·ª£c nhi·ªÅu ng∆∞·ªùi d√¢n t·ªôc, vƒÉn h√≥a ƒë·ªôc ƒë√°o. H∆°i m·ªát nh∆∞ng r·∫•t ƒë√°ng!",
      createdAt: new Date("2025-10-11")
    },
    {
      tour: sapa,
      user: user2,
      rating: 5,
      comment: "C·∫£nh ƒë·∫πp xu·∫•t s·∫Øc! Ch·ª£ t√¨nh Sapa r·∫•t ƒë·∫∑c s·∫Øc. Homestay ·∫•m c√∫ng, ch·ªß nh√† th√¢n thi·ªán. S·∫Ω quay l·∫°i!",
      createdAt: new Date("2025-10-13")
    }
  ]);
  print("‚úÖ ƒê√£ t·∫°o 3 reviews cho Sapa");
}

// Reviews cho tour Nha Trang
if (nhatrang && user4) {
  db.reviews.insertMany([
    {
      tour: nhatrang,
      user: user4,
      rating: 5,
      comment: "Nha Trang vui l·∫Øm! Vinpearl Land s∆∞·ªõng kh√¥ng t∆∞·ªüng. T·∫Øm bi·ªÉn, l·∫∑n ng·∫Øm san h√¥ ƒë·ªÅu tuy·ªát. Gi√° c·∫£ h·ª£p l√Ω!",
      createdAt: new Date("2025-10-09")
    },
    {
      tour: nhatrang,
      user: user2,
      rating: 4,
      comment: "B√£i bi·ªÉn ƒë·∫πp, n∆∞·ªõc trong. ƒê·∫£o H√≤n Mun r·∫•t ƒë·∫πp. Tr·ª´ ƒëi·ªÉm v√¨ ƒë√¥ng kh√°ch m·ªôt ch√∫t.",
      createdAt: new Date("2025-10-12")
    },
    {
      tour: nhatrang,
      user: user3,
      rating: 5,
      comment: "Chuy·∫øn ƒëi gia ƒë√¨nh r·∫•t vui! Tr·∫ª em th√≠ch Vinpearl l·∫Øm. Kh√°ch s·∫°n view bi·ªÉn ƒë·∫πp. Nh·∫•t ƒë·ªãnh s·∫Ω quay l·∫°i!",
      createdAt: new Date("2025-10-15")
    }
  ]);
  print("‚úÖ ƒê√£ t·∫°o 3 reviews cho Nha Trang");
}

// Reviews cho tour H·ªôi An
if (hoian && user1) {
  db.reviews.insertMany([
    {
      tour: hoian,
      user: user1,
      rating: 5,
      comment: "H·ªôi An ph·ªë c·ªï r·∫•t ƒë·∫πp! Ban ƒë√™m th·∫£ ƒë√®n hoa ƒëƒÉng l√£ng m·∫°n l·∫Øm. M√≥n ƒÉn ƒë·∫∑c s·∫£n cao l·∫ßu, b√°nh m√¨ ngon tuy·ªát!",
      createdAt: new Date("2025-10-07")
    },
    {
      tour: hoian,
      user: user3,
      rating: 5,
      comment: "Ki·∫øn tr√∫c c·ªï k√≠nh, vƒÉn h√≥a ƒë·∫∑c s·∫Øc. Ch√πa C·∫ßu, h·ªôi qu√°n ƒë·ªÅu ƒë·∫πp. Tour guide gi·∫£i th√≠ch r·∫•t hay!",
      createdAt: new Date("2025-10-10")
    },
    {
      tour: hoian,
      user: user4,
      rating: 4,
      comment: "Ph·ªë c·ªï ƒë·∫πp, nh∆∞ng h∆°i ƒë√¥ng kh√°ch. ƒê·ªì ƒÉn ngon, gi√° h·ª£p l√Ω. Ch·ª•p h√¨nh r·∫•t ƒë·∫πp!",
      createdAt: new Date("2025-10-14")
    }
  ]);
  print("‚úÖ ƒê√£ t·∫°o 3 reviews cho H·ªôi An");
}

// =====================================================
// B∆Ø·ªöC 4: TH·ªêNG K√ä
// =====================================================

print("\n==========================================");
print("üìä TH·ªêNG K√ä SAU KHI INSERT REVIEWS:");
print("==========================================");

const totalReviews = db.reviews.countDocuments();
print("‚úÖ T·ªïng s·ªë reviews: " + totalReviews);

// ƒê·∫øm reviews theo rating
print("\nüìà Ph√¢n b·ªë theo rating:");
for (let i = 5; i >= 1; i--) {
  const count = db.reviews.countDocuments({ rating: i });
  print(i + " sao: " + count + " reviews");
}

// Review trung b√¨nh cho m·ªói tour
print("\n‚≠ê ƒê√°nh gi√° trung b√¨nh cho m·ªói tour:");
const tourStats = db.reviews.aggregate([
  {
    $group: {
      _id: "$tour",
      avgRating: { $avg: "$rating" },
      count: { $sum: 1 }
    }
  },
  {
    $lookup: {
      from: "tours",
      localField: "_id",
      foreignField: "_id",
      as: "tourInfo"
    }
  }
]).toArray();

tourStats.forEach(stat => {
  if (stat.tourInfo && stat.tourInfo[0]) {
    print("  " + stat.tourInfo[0].title + ": " + 
          stat.avgRating.toFixed(1) + "/5 (" + stat.count + " reviews)");
  }
});

print("\n==========================================");
print("‚úÖ HO√ÄN TH√ÄNH! Reviews ƒë√£ ƒë∆∞·ª£c insert.");
print("==========================================");
print("\nL∆ØU √ù:");
print("- Reviews s·∫Ω t·ª± ƒë·ªông c·∫≠p nh·∫≠t ratingsAverage v√† ratingsQuantity cho tours");
print("- M·ªói user ch·ªâ review 1 l·∫ßn cho m·ªói tour (unique constraint)");
print("- Refresh trang web ƒë·ªÉ th·∫•y reviews hi·ªÉn th·ªã!");
